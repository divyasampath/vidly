{"version":3,"sources":["serviceWorker.js","services/fakeGenreService.js","services/fakeMovieService.js","components/common/like.jsx","components/common/pagination.jsx","components/utils/paginate.js","components/common/listGroup.jsx","components/movies.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Like","prop","classess","react_default","a","createElement","style","cursor","className","onClick","pagination","props","pageSize","itemsCount","currentPage","pageCount","pages","_","range","map","page","key","onPageChange","paginate","items","startIndex","slice","take","value","ListGroup","_ref","selectedItem","item","id","state","handlePageChange","_this","setState","this","filter","g","movie","Object","toConsumableArray","index","indexOf","_this2","_this$state","allMovies","count","length","Paginate","listGroup","like","handleLiked","handleDelete","common_pagination","Component","App","components_movies","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc52a5ec.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from \"react\";\n\nconst Like = prop => {\n  let classess = \"fa fa-heart\";\n  classess += !prop.liked ? \"-o\" : \"\";\n  return (\n    <i\n      style={{ cursor: \"pointer\" }}\n      className={classess}\n      onClick={prop.onClick}\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\n//input:pageSize,currentPage,pageCount\n\nconst pagination = props => {\n  const { pageSize, itemsCount, currentPage } = props;\n  const pageCount = itemsCount / pageSize;\n  const pages = _.range(1, pageCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n            onClick={() => props.onPageChange(page)}\n          >\n            <a className=\"page-link\">{page}</a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default pagination;\n","import _ from \"lodash\";\n\nconst paginate = (items, pageSize, currentPage) => {\n  const startIndex = (currentPage - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n};\n\nexport default paginate;\n","import React, { Component } from \"react\";\n\nconst ListGroup = ({ items, selectedItem }) => {\n  return (\n    <ul className=\"list-group\">\n      {items.map(item => (\n        <li key={item.id} className=\"list-group-item\">\n          {item.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport Like from \"./common/like\";\nimport Pagination from \"./common/pagination\";\nimport Paginate from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4\n  };\n  componentDidMount() {\n    this.setState({ movies: getMovies(), genres: getGenres() });\n  }\n  handleDelete(key) {\n    this.setState({\n      movies: this.state.movies.filter(movie => movie._id !== key)\n    });\n  }\n  handleLiked(movie) {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  }\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n  render() {\n    const { pageSize, currentPage, movies: allMovies, genres } = this.state;\n    const count = this.state.movies.length;\n    const movies = Paginate(allMovies, pageSize, currentPage);\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup items={genres} />\n        </div>\n        <div className=\"col\">\n          <h1>showing {count} movies from database</h1>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>title</th>\n                <th>DailyRental</th>\n                <th>no. of stocks</th>\n                <th />\n                <th />\n              </tr>\n            </thead>\n            <tbody>\n              {movies.map(movie => (\n                <tr key={movie._id}>\n                  <td>{movie.title}</td>\n                  <td>{movie.dailyRentalRate}</td>\n                  <td>{movie.numberInStock}</td>\n                  <td>\n                    <Like\n                      liked={movie.liked}\n                      onClick={() => this.handleLiked(movie)}\n                    />\n                  </td>\n                  <td\n                    className=\"badge badge-danger\"\n                    onClick={() => this.handleDelete(movie._id)}\n                  >\n                    Delete\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <Pagination\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n            itemsCount={count}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default movies;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/movies\";\n\nclass App extends Component {\n  render() {\n    return (\n      <main>\n        <div className=\"container\">\n          <Movies />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}